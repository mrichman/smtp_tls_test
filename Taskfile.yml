version: '3'

vars:
  BINARY_NAME: 
    sh: |
      if [ "{{OS}}" = "windows" ]; then
        echo "smtp_tls_test.exe"
      else
        echo "smtp_tls_test"
      fi

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task -l
    silent: true

  build:
    desc: Build the application
    vars:
      MKDIR_CMD:
        sh: |
          if [ "{{OS}}" = "windows" ]; then
            echo "mkdir -p build 2>nul || (exit 0)"
          else
            echo "mkdir -p build"
          fi
    cmds:
      - '{{.MKDIR_CMD}}'
      - go build -o build/{{.BINARY_NAME}}

  run:
    desc: Run without TLS
    deps: [build]
    cmds:
      - '{{if eq OS "windows"}}.\build\{{.BINARY_NAME}}{{else}}./build/{{.BINARY_NAME}}{{end}} send'

  run:tls:
    desc: Run with TLS
    deps: [build]
    cmds:
      - '{{if eq OS "windows"}}.\build\{{.BINARY_NAME}}{{else}}./build/{{.BINARY_NAME}}{{end}} send --tls'

  run:verbose:
    desc: Run in verbose mode
    deps: [build]
    cmds:
      - '{{if eq OS "windows"}}.\build\{{.BINARY_NAME}}{{else}}./build/{{.BINARY_NAME}}{{end}} send --verbose'

  run:tls-verbose:
    desc: Run with TLS and verbose mode
    deps: [build]
    cmds:
      - '{{if eq OS "windows"}}.\build\{{.BINARY_NAME}}{{else}}./build/{{.BINARY_NAME}}{{end}} send --tls --verbose'

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  lint:
    desc: Run linters
    cmds:
      - golangci-lint run

  fmt:
    desc: Format code
    cmds:
      - go fmt ./...

  vet:
    desc: Run go vet
    cmds:
      - go vet ./...

  clean:
    desc: Remove build artifacts
    cmds:
      - '{{if eq OS "windows"}}if exist build rmdir /s /q build{{else}}rm -rf build{{end}}'

  all:
    desc: Run format, lint, vet, test and build
    cmds:
      - task: fmt
      - task: lint
      - task: vet
      - task: test
      - task: build

  help:
    desc: Show help for the program
    deps: [build]
    cmds:
      - '{{if eq OS "windows"}}.\build\{{.BINARY_NAME}}{{else}}./build/{{.BINARY_NAME}}{{end}} --help'

  install-task:
    desc: Install Task runner
    cmds:
      - |
        {{if eq OS "windows"}}
        echo "Please download Task from https://taskfile.dev/installation/ for Windows"
        {{else if eq OS "darwin"}}
        sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
        {{else}}
        sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
        {{end}}
